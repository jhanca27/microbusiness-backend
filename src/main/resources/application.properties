spring.application.name=ubuntu-api
#server.port=8085
server.servlet.context-path=/api/v1

spring.datasource.url=${DB_SERVER_URL}
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_USER_PASSWORD}
spring.datasource.driver-class-name=org.mariadb.jdbc.Driver

spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.show-sql=true

spring.datasource.initialization-mode=always
spring.datasource.schema=classpath:ubuntudb-dump.sql
spring.datasource.data=classpath:import.sql

# Imagen
cloudinary.cloud-name=${CLOUDINARY_NAME}
cloudinary.api-key=${CLOUDINARY_API_KEY}
cloudinary.api-secret=${CLOUDINARY_API_SECRET}

# Google Login
spring.security.oauth2.client.registration.google.client-id=${CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${CLIENT_SECRET}
spring.security.oauth2.client.registration.google.redirect-uri=${REDIRECT_URI}
spring.security.oauth2.client.registration.google.authorization-grant-type=authorization_code
secret.security.jwt=${SECRET_KEY}

# OAuth2 Provider Details for Google
spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo
spring.security.oauth2.client.provider.google.jwk-set-uri=https://www.googleapis.com/oauth2/v3/certs
spring.security.oauth2.client.provider.google.user-name-attribute=sub

loggin.level.org.springframework.security=TRACE

logging.level.org.springframework.security=DEBUG
logging.level.org.springframework.web=DEBUG

sendgrid.api-key=${SENDGRID_API_KEY}